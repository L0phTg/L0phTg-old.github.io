<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kaleidoscope on L0phTg&#39;s Blog</title>
    <link>https://l0phtg.github.io/tags/kaleidoscope/</link>
    <description>Recent content in Kaleidoscope on L0phTg&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>l0phtg</copyright>
    <lastBuildDate>Sat, 13 Apr 2019 15:02:51 +0800</lastBuildDate>
    
	<atom:link href="https://l0phtg.github.io/tags/kaleidoscope/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kaleidoscope: Adding JIT and Optimizer Support</title>
      <link>https://l0phtg.github.io/post/llvm/kaleidoscope-adding-jit-and-optimizer-support/</link>
      <pubDate>Sat, 13 Apr 2019 15:02:51 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/llvm/kaleidoscope-adding-jit-and-optimizer-support/</guid>
      <description>&lt;p&gt;translate from: &lt;a href=&#34;http://llvm.org/docs/tutorial/LangImpl04.html&#34;&gt;http://llvm.org/docs/tutorial/LangImpl04.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本文介绍使用LLVM Pass对产生的LLVM IR进行优化, 以及为我们的Kaleidoscope添加JIT.&lt;/p&gt;

&lt;div class=&#34;mermaid&#34;&gt;
graph TB

    subgraph call
        funcall(&#34;foo(1);&#34;)
    end

    subgraph expr
        nodeExpr(&#34;1+2;&#34;)
    end
    
    jitAddModule[&#34;JIT中 添加此Module&#34;]
    jitRemoveModule[&#34;JIT中 删除此Module&#34;]
    
    anoCodegen[&#34;执行 匿名函数Codegen&#34;]
    AnonymousCall[&#34;匿名函数包装&#34;]
    optimizeFunc[&#34;执行 Pass优化&#34;]
    nodeExpr --&gt; AnonymousCall
    funcall --&gt; AnonymousCall
    AnonymousCall --&gt; anoCodegen
    anoCodegen --&gt; jitAddModule
    jitAddModule --&gt; optimizeFunc
    optimizeFunc --&gt; exec[&#34;JIT 运行此表达式, 并计算值&#34;]
    exec --&gt; jitRemoveModule
    
    subgraph func definition
        nodeFoo(&#34;def foo(x) x+1;&#34;)
        funcCodegen[&#34;执行 函数定义Codegen&#34;]
        nodeFoo --&gt; funcCodegen
    end
    
    funcCodegen --&gt; jitAddFuncModule[&#34;jit中 添加此Module&#34;]
    jitAddFuncModule --&gt; initPassManager[&#34;执行 pass优化&#34;]


    subgraph extern
        nodeExtern(&#34;extern sin(x);&#34;)
        protoCodegen[&#34;执行 函数申明Codegen&#34;]
        nodeExtern --&gt; protoCodegen
    end
    
    style jitAddModule fill:#f9f
    style jitRemoveModule fill:#f9f
    style jitAddFuncModule fill:#f9f
    
    style optimizeFunc fill:#ccff66
    style initPassManager fill:#ccff66
    
    style exec fill:#ff3300
    

&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kaleidoscope: Code Generation to LLVM IR</title>
      <link>https://l0phtg.github.io/post/llvm/kaleidoscope-code-generation-to-llvm-ir/</link>
      <pubDate>Fri, 12 Apr 2019 16:55:05 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/llvm/kaleidoscope-code-generation-to-llvm-ir/</guid>
      <description>&lt;p&gt;translate from: &lt;a href=&#34;http://llvm.org/docs/tutorial/LangImpl03.html&#34;&gt;http://llvm.org/docs/tutorial/LangImpl03.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;介绍四个基本表达式和函数申明与定义的Codegen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://l0phtg.github.io/docs-pic/llvm/Codegen.png&#34; alt=&#34;codegen .png&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kaleidoscope: Implementing a Parser and AST</title>
      <link>https://l0phtg.github.io/post/llvm/kaleidoscope-implementing-a-parser-and-ast/</link>
      <pubDate>Thu, 11 Apr 2019 15:41:17 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/llvm/kaleidoscope-implementing-a-parser-and-ast/</guid>
      <description>&lt;p&gt;translate from: &lt;a href=&#34;http://llvm.org/docs/tutorial/LangImpl02.html&#34;&gt;http://llvm.org/docs/tutorial/LangImpl02.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://l0phtg.github.io/docs-pic/dots/uml/ExprAst-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;介绍AST(抽象语法树)和Parser.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kaleidoscope: Tutorial Introduction and Lexer</title>
      <link>https://l0phtg.github.io/post/kaleidoscope-tutorial-introduction-and-lexer/</link>
      <pubDate>Wed, 10 Apr 2019 10:17:08 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/kaleidoscope-tutorial-introduction-and-lexer/</guid>
      <description>&lt;p&gt;translate from &lt;a href=&#34;http://llvm.org/docs/tutorial/LangImpl01.html&#34;&gt;http://llvm.org/docs/tutorial/LangImpl01.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本tutorial将会介绍一个简单语言的实现.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>