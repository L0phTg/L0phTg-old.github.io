<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on L0phTg&#39;s Blog</title>
    <link>https://l0phtg.github.io/post/</link>
    <description>Recent content in Posts on L0phTg&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>l0phtg</copyright>
    <lastBuildDate>Fri, 12 Apr 2019 16:55:05 +0800</lastBuildDate>
    
	<atom:link href="https://l0phtg.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kaleidoscope: Code Generation to LLVM IR</title>
      <link>https://l0phtg.github.io/post/llvm/kaleidoscope-code-generation-to-llvm-ir/</link>
      <pubDate>Fri, 12 Apr 2019 16:55:05 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/llvm/kaleidoscope-code-generation-to-llvm-ir/</guid>
      <description>&lt;p&gt;translate from: &lt;a href=&#34;http://llvm.org/docs/tutorial/LangImpl03.html&#34;&gt;http://llvm.org/docs/tutorial/LangImpl03.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;介绍四个基本表达式和函数申明与定义的Codegen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://l0phtg.github.io/docs-pic/llvm/Codegen.png&#34; alt=&#34;codegen .png&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kaleidoscope: Implementing a Parser and AST</title>
      <link>https://l0phtg.github.io/post/llvm/kaleidoscope-implementing-a-parser-and-ast/</link>
      <pubDate>Thu, 11 Apr 2019 15:41:17 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/llvm/kaleidoscope-implementing-a-parser-and-ast/</guid>
      <description>&lt;p&gt;translate from: &lt;a href=&#34;http://llvm.org/docs/tutorial/LangImpl02.html&#34;&gt;http://llvm.org/docs/tutorial/LangImpl02.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://l0phtg.github.io/docs-pic/dots/uml/ExprAst-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;介绍AST(抽象语法树)和Parser.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kaleidoscope: Tutorial Introduction and Lexer</title>
      <link>https://l0phtg.github.io/post/kaleidoscope-tutorial-introduction-and-lexer/</link>
      <pubDate>Wed, 10 Apr 2019 10:17:08 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/kaleidoscope-tutorial-introduction-and-lexer/</guid>
      <description>&lt;p&gt;translate from &lt;a href=&#34;http://llvm.org/docs/tutorial/LangImpl01.html&#34;&gt;http://llvm.org/docs/tutorial/LangImpl01.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本tutorial将会介绍一个简单语言的实现.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Static Single Assignment</title>
      <link>https://l0phtg.github.io/post/llvm/static-single-assignment/</link>
      <pubDate>Tue, 09 Apr 2019 21:54:49 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/llvm/static-single-assignment/</guid>
      <description>&lt;p&gt;translate from: &lt;a href=&#34;https://en.wikipedia.org/wiki/Static_single_assignment_form&#34;&gt;https://en.wikipedia.org/wiki/Static_single_assignment_form&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;单一变量赋值
&lt;img src=&#34;https://l0phtg.github.io/llvm/SSA_example1.2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dominator(graph Theory)</title>
      <link>https://l0phtg.github.io/post/dominatorgraph-theory/</link>
      <pubDate>Sat, 06 Apr 2019 18:00:53 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/dominatorgraph-theory/</guid>
      <description>&lt;p&gt;translate from : &lt;a href=&#34;https://en.wikipedia.org/wiki/Dominator_(graph_theory)&#34;&gt;https://en.wikipedia.org/wiki/Dominator_(graph_theory)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;最近在学习SSA(Static Single Assignment)时, 遇到了${dominance frontier}$的概念, 所以google之, 简单翻译了一下wikipedia上对Dominator内容的介绍.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如果你冲动删除了python</title>
      <link>https://l0phtg.github.io/post/%E5%A6%82%E6%9E%9C%E4%BD%A0%E5%86%B2%E5%8A%A8%E5%88%A0%E9%99%A4%E4%BA%86python/</link>
      <pubDate>Tue, 02 Apr 2019 21:12:17 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/%E5%A6%82%E6%9E%9C%E4%BD%A0%E5%86%B2%E5%8A%A8%E5%88%A0%E9%99%A4%E4%BA%86python/</guid>
      <description>&lt;p&gt;在你经历了痛苦的pip安装, 各种报错之后. 一气之前, 你决定卸载python, 重新安装. 那么, 既然要卸载, 就要卸载的彻底!&lt;/p&gt;

&lt;p&gt;所以你输入了下面的几行命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#hahaha
$sudo apt remove python
$sudo apt remove python3
$sudo apt remove pip
$sudo apt remove pip3
#一定删除的不彻底, 我要彻底删除
$sudo apt autoremove -f 
看到要删除600+M, 毅然决然的按了 y.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;Bingo 然后你看到了我这篇文章.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>本科应届生安全岗面试总结</title>
      <link>https://l0phtg.github.io/post/%E6%9C%AC%E7%A7%91%E5%BA%94%E5%B1%8A%E7%94%9F%E5%AE%89%E5%85%A8%E5%B2%97%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 02 Apr 2019 11:24:31 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/%E6%9C%AC%E7%A7%91%E5%BA%94%E5%B1%8A%E7%94%9F%E5%AE%89%E5%85%A8%E5%B2%97%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;很久没有更新博客了, 主要原因是因为现在笔记都记在了有道云笔记中. 并且 很多篇文章都只写了一半, 也不想发出来.&lt;/p&gt;

&lt;p&gt;近期时间充裕, 应该会保持每周一更, 将以前写的或者近期学到的知识总结一下发在博客里.&lt;/p&gt;

&lt;p&gt;本篇文章是19年春节写的, 主要记录了自己在18年的几次面试记录, 和大学期间的一些学习经历.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我的zsh和vim配置</title>
      <link>https://l0phtg.github.io/post/%E6%88%91%E7%9A%84zsh%E5%92%8Cvim%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 24 Oct 2018 00:14:31 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/%E6%88%91%E7%9A%84zsh%E5%92%8Cvim%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;p&gt;总结了一下自己的vim配置和zsh配置&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://l0phtg.github.io/customConfig/myVimPreview.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pixel1 源码编译</title>
      <link>https://l0phtg.github.io/post/pixel1-%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</link>
      <pubDate>Tue, 02 Oct 2018 15:38:56 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/pixel1-%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</guid>
      <description>&lt;p&gt;记录自己Pixel1刷机流程.&lt;/p&gt;

&lt;p&gt;相关网站&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Requirements
https://source.android.google.cn/setup/build/requirements.html#binaries

https://source.android.com/setup/build/running

buile numbers
https://source.android.com/setup/start/build-numbers

https://source.android.com/setup/build/downloading

驱动
https://developers.google.com/android/drivers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo搭建博客</title>
      <link>https://l0phtg.github.io/post/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 19 Sep 2018 20:04:10 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;p&gt;博客半年多没更新了. 正好最近时间比较多, 想着把博客更新下, 再把几篇平时总结的文章上传在Blog里面.&lt;/p&gt;

&lt;p&gt;以前使用hexo搭的, 最近发现了好多人在用&lt;code&gt;hugo&lt;/code&gt;, 自己使用hugo重新搭建了一下, 简单方便, 好感指数五颗星.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Iqiyi开源hook框架XHook分析</title>
      <link>https://l0phtg.github.io/post/iqiyi%E5%BC%80%E6%BA%90hook%E6%A1%86%E6%9E%B6xhook%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 19 Aug 2018 02:19:05 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/iqiyi%E5%BC%80%E6%BA%90hook%E6%A1%86%E6%9E%B6xhook%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;Got Hook 可以使用dlsym得到目标函数的地址, 然后遍历got表进行Hook.&lt;/p&gt;

&lt;p&gt;但是有时候我们不能通过dlsym得到函数地址. 这时我们需要怎么办呢? iqiyi的xhook很好的解决了这个问题, (可以参考linker的实现, &lt;strong&gt;有问题, 看源码&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;通过找到目标函数地址存放在got表中位置, 只要找到了目标symbol在got表中的offset, 想要修改或者得到目标函数的实际地址就轻松多了.&lt;/p&gt;

&lt;p&gt;symbol -&amp;gt; symid -&amp;gt; 在got表中的offset  -&amp;gt; 目标函数实际地址&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>InlineHook学习分析</title>
      <link>https://l0phtg.github.io/post/inlinehook%E5%AD%A6%E4%B9%A0%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 05 Apr 2018 02:14:31 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/inlinehook%E5%AD%A6%E4%B9%A0%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;分析开源的inlineHook代码, 总结inlineHook的原理与实现.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>装机日志-deepin</title>
      <link>https://l0phtg.github.io/post/%E8%A3%85%E6%9C%BA%E6%97%A5%E5%BF%97-deepin/</link>
      <pubDate>Thu, 28 Dec 2017 11:47:58 +0000</pubDate>
      
      <guid>https://l0phtg.github.io/post/%E8%A3%85%E6%9C%BA%E6%97%A5%E5%BF%97-deepin/</guid>
      <description>&lt;p&gt;17年使用了一段时间deepin系统, 这里简单记录一些使用心得(现在已转ubuntu.&lt;/p&gt;

&lt;p&gt;主要就是&lt;strong&gt;装机的过程&lt;/strong&gt;, 以及&lt;strong&gt;装机后的效果展示&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://l0phtg.github.io/deepin/desktop.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>thumb指令虚拟化学习(一)</title>
      <link>https://l0phtg.github.io/post/thumb%E6%8C%87%E4%BB%A4%E8%99%9A%E6%8B%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Tue, 24 Oct 2017 20:23:30 +0800</pubDate>
      
      <guid>https://l0phtg.github.io/post/thumb%E6%8C%87%E4%BB%A4%E8%99%9A%E6%8B%9F%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://l0phtg.github.io/thumb-vmp/thumb16.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;上半年接触过一些 &lt;strong&gt;app加固&lt;/strong&gt; 的知识, 对 &lt;strong&gt;vm&lt;/strong&gt; 这块一直空有兴趣而没有了解过;  最近, 阅读了几篇文章, &lt;code&gt;有所启发&lt;/code&gt;, 所以决定学习一下 &lt;strong&gt;vm&lt;/strong&gt; 这块的一些操作.&lt;/p&gt;

&lt;p&gt;主要内容分为:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;环境搭建&lt;/li&gt;
&lt;li&gt;提取指令&lt;/li&gt;
&lt;li&gt;capstone处理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>elf文件格式和AndroidLinker加载.so的源码分析</title>
      <link>https://l0phtg.github.io/post/elf%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%92%8Candroidlinker%E5%8A%A0%E8%BD%BD-so%E7%9A%84%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 19 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://l0phtg.github.io/post/elf%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%92%8Candroidlinker%E5%8A%A0%E8%BD%BD-so%E7%9A%84%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;最近在学习android应用的加壳和混淆方法, 所以遇到了一些有关.so是如何加载到android中去的问题, 看了一些视频和文章, 所以想在此总结一下.&lt;/p&gt;

&lt;p&gt;本文主要内容:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;elf的文件格式&lt;/li&gt;
&lt;li&gt;分析linker的源码, 主要dlopen流程.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>分析Android的JNI编程时所使用的一些函数功能</title>
      <link>https://l0phtg.github.io/post/%E5%88%86%E6%9E%90android%E7%9A%84jni%E7%BC%96%E7%A8%8B%E6%97%B6%E6%89%80%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Thu, 16 Mar 2017 03:07:59 +0000</pubDate>
      
      <guid>https://l0phtg.github.io/post/%E5%88%86%E6%9E%90android%E7%9A%84jni%E7%BC%96%E7%A8%8B%E6%97%B6%E6%89%80%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%E5%8A%9F%E8%83%BD/</guid>
      <description>&lt;p&gt;分析&lt;strong&gt;jni调用时&lt;/strong&gt;的一些函数及其函数功能.&lt;/p&gt;

&lt;p&gt;如 GetEnv &amp;hellip;&lt;/p&gt;

&lt;p&gt;本文已长草.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>第一篇博文-谈谈CVE-2014-7911</title>
      <link>https://l0phtg.github.io/post/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87-%E8%B0%88%E8%B0%88cve-2014-7911/</link>
      <pubDate>Wed, 01 Mar 2017 20:20:20 +0000</pubDate>
      
      <guid>https://l0phtg.github.io/post/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87-%E8%B0%88%E8%B0%88cve-2014-7911/</guid>
      <description>&lt;p&gt;分析一个反序列化漏洞, 以及漏洞的产生的利用过程.&lt;/p&gt;

&lt;p&gt;本文主要内容:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;漏洞成因&lt;/li&gt;
&lt;li&gt;漏洞利用的原理&lt;/li&gt;
&lt;li&gt;基础知识&lt;/li&gt;
&lt;li&gt;漏洞利用流程&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>